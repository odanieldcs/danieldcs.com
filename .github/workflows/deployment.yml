name: Deployment
on:
  push:
    branches: [main, dev]
  pull_request:
    branches: ['**']

env:
  NODE_VERSION: '22'
  PNPM_VERSION: '10'

jobs:
  setup:
    name: 🏗️ Setup
    runs-on: ubuntu-latest
    outputs:
      pnpm_store_path: ${{ steps.pnpm-cache.outputs.pnpm_cache_path }}
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - name: ⚙️ Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: 📦 Cache pnpm store
        id: pnpm-cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
  lint:
    name: 🧹 Lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
      - name: 🥁 Install dependencies
        run: pnpm install --frozen-lockfile
      - name: 🔍 Run lint
        run: pnpm lint
  typecheck:
    name: 🔍 Type Check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
      - name: 🥁 Install dependencies
        run: pnpm install --frozen-lockfile
      - name: 🔍 Run type check
        run: pnpm typecheck
  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [lint, typecheck]
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
      - name: 🥁 Install dependencies
        run: pnpm install --frozen-lockfile
      - name: 🔍 Run tests
        run: pnpm test